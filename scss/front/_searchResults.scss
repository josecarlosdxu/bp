$paddingTopSearch: 1rem;
$headerSearchBg: #4a5054;
$catsBg: $color-lightGrey-light;
//-----------
@include block(searchResults) {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 5;
    display: block;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s 0.2s;
    @include element(container) {
        margin: 0 auto;
        width: 100%;
        max-width: 1024px;
        position: relative;
        height: 0;
        display: flex;
        align-items: flex-start;
        &:before {
            content: "";
            width: 100%;
            position: absolute;
            height: 7.45rem;
            top: 0;
            left: 0;
            background-color: $headerSearchBg;
            z-index: -1;
        }
        @include addBreakpoint(lg) {
            max-width: 1200px;
        }
    }
    @include element(form) {
        transition: none;
        width: 699px;
        opacity: 0;
        transition: opacity 0.2s;
        position: relative;
        box-shadow: 10rem -1px #373C3F, 10rem 1px #373C3F;
        @include addBreakpoint(lg) {
            width: 100%;
            box-shadow: none;
        }
    }
    @include element(homelink) {
        padding: $um / 2 1rem 1rem;
        width: 8.4rem;
    }
    @include element(buttonForm) {
        position: absolute;
        right: 0;
        top: 0;
        border-radius: 0;
        height: 100%;
        &:hover,
        &:focus,
        &:active {
            box-shadow: none;
        }
        &:disabled {
            background-color: transparent !important;
            opacity: 1 !important;
            cursor: default !important;
            border: none;
        }
        /*background-image: url("../../img/mobileicons/search_active.svg");
        background-position: center center;
        background-repeat: no-repeat;
        background-size: 1.5rem auto;*/
    }
    @include element(content) {
        background-color: white;
        box-shadow: 0 0 0 1px $color-darkGrey-default;
        min-height: 2.5rem;
        transform-origin: 24.5rem 50% 0;
        position: relative;
        margin-top: 1rem;
        display: flex;
        width: 100%;
        transform: scaleX(0.38);
        border-radius: 4px;
        transition: transform 0.2s 0.2s, border-radius 0.2s;
    }
    @include element(cats) {
        visibility: hidden;
        position: relative;
        opacity: 0;
        transition: opacity 0.2s;
    }
    @include element(selectCatBtn) {
        border-radius: 0;
        border: none;
        height: 2.6rem;
        color: $color-darkGrey-dark;
        white-space: nowrap;
        padding-left: $um;
        box-shadow: 0 -1px $color-shadow inset;
        background-color: $catsBg;
        &:after {
            content: "\276f";
            align-items: center;
            display: inline-flex;
            font-weight: 700;
            height: 1rem;
            justify-content: center;
            line-height: 1;
            margin-left: 1rem;
            transform: rotate(90deg);
            width: 1rem;
        }
        &:hover,
        &:focus {
            background-color: $catsBg;
            box-shadow: 0 -1px $color-shadow inset;
        }
    }
    @include element(catsTexts) {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
        align-items: center;
    }
    @include element(catsContainer) {
        padding: $um;
        background-color: $catsBg;
        position: absolute;
        top: 2.5rem;
        left: 0;
        min-width: 0;
        max-width: 72.1rem;
        z-index: 1;
        box-shadow: 1px 1px 1px $color-shadow, -2px 0 1px $color-shadow;
        transform-origin: 0 0 0;
        transform: scaleY(0);
        transition: transform 0.1s 0s;
        @include addBreakpoint(lg) {
            min-width: 92.15rem;
            max-width: 92.15rem;
        }
    }
    @include element(inputText) {
        height: 31px;
        border: none;
        position: relative;
        padding: 0 $um * 2 0 $um / 2;
        box-shadow: 0px 0px 0px 1px $color-lightGrey-default inset, 0px 0px 1px 1px transparentize($color-accentBlue-default, 1) inset;
        margin: 0;
        //opacity: 0.5;
        transition: box-shadow 0.3s ease-out;
        &:focus {
            //border-color: $color-accentBlue-default;
            //opacity: 1;
            box-shadow: 0px 0px 0px 1px $color-accentBlue-default inset, 0px 0px 1px 1px $color-accentBlue-default inset;
            + .searchResults-buttonForm {
                height: calc(100% - 2px);
                margin: 1px;
            }
        }
    }
    @include element(toggleLabel) {
        display: block;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
        background: rgba(0, 0, 0, 0.25);
        cursor: default !important;
        @include modifier(top) {
            background-color: transparent;
            height: 2.6rem;
            cursor: text !important;
        }
    }
    @include element(results) {
        position: absolute;
        display: flex;
        //display: none;
        background: white;
        width: 72.1rem;
        left: 7.8rem;
        top: 3.6rem;
        min-height: 0;
        height: auto;
        flex-wrap: wrap;
        overflow: hidden;
        transition: min-height 0.1s 0s;
        @include addBreakpoint(lg) {
            width: 92.15rem;
            left: 7.9rem;
        }
    }
    @include element(resultsTagsArea) {
        width: 340px;
        background-color: $color-lightGrey-light;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 0 1rem;
        height: 100%;
        position: absolute;
        right: 0;
        top: 0;
    }
    @include element(resultsTagsCont) {
        padding: 1rem 0 0;
        flex-grow: 1;
        border-top: 1px solid white;
        position: relative;
        &:first-child {
            border: none;
            height: 10rem;
            overflow: hidden;
        }
    }
    @include element(more) {
        color: $color-more;
        display: inline-flex;
        position: absolute;
        right: 0;
        top: 1rem;
        &:after {
            content: "\276f";
            align-items: center;
            display: inline-flex;
            font-weight: 500;
            //height: 1rem;
            font-size: 0.9rem;
            justify-content: flex-end;
            line-height: 1;
            width: $um / 2;
        }
    }
    @include element(resultsCont) {
        width: calc(100% - 340px);
        padding: $um;
        padding-top: $um / 2;
        padding-right: 0;
        position: absolute;
        height: 100%;
        top: 0;
        left: 0;
        display: block;
        opacity: 0;
        transition: opacity 0.3s;
        pointer-events: none;
    }
    @include element(resultsTitle) {
        @extend .title;
        font-size: 1.2rem;
        text-transform: none;
        margin-bottom: $um / 3;
    }
    @include element(resultsSubTitle) {
        @extend .title;
        font-size: 1.1rem;
        text-transform: none;
        margin-bottom: $um / 2;
    }
    @include element(resultsBack) {
        opacity: 0.5;
        font-size: 0.9rem;
        display: block;
        margin-bottom: 1rem;
        &:before {
            content: "\276E";
            align-items: center;
            display: inline-flex;
            font-weight: 500;
            justify-content: center;
            line-height: 1;
            padding-right: 0.25rem;
        }
    }
    .loader {
        top: $paddingTopSearch;
        right: 0;
        padding: 0.5rem;
        z-index: 10;
    }
    .homefeatured {
        margin: 0;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.1s 0s;
        border: 1px solid $color-shadow;
        box-shadow: none;
    }
}

#searchResultsLaunch {
    &:checked {
        + .searchResults-results {
            min-height: 34.15rem;
            transition: min-height 0.2s ease-out 0.4s;
        }
    }
}

input[name="searchResults-resultsTab"] {
    &:checked {
        + .searchResults-resultsCont {
            opacity: 1;
            pointer-events: auto;
        }
    }
}

#searchResults-toggle {
    &:checked {
        + .searchResults {
            opacity: 1;
            transition: opacity 0.2s ease-out;
            pointer-events: auto;
            .searchResults-content {
                transform: scaleX(1);
                border-radius: 0;
                transition: transform 0.2s ease-in-out 0.1s, border-radius 1s 0.5s;
            }
            .searchResults-cats,
            .searchResults-form {
                visibility: visible;
                opacity: 1;
                transition: opacity 0.08s ease-in 0.4s;
            }
        }
    }
}

#searchResults-checkCats {
    &:checked {
        + .searchResults-selectCatBtn::after {
            transform: rotate(270deg);
        }
        ~ .searchResults-catsContainer {
            transform: scaleY(1);
            transition: transform 0.1s ease-out;
            .homefeatured {
                opacity: 1;
                pointer-events: auto;
                transition: opacity 0.14s ease-in 0.2s;
            }
        }
    }
}

input.inputToggle[data-js="search category radio"] {
    //display: inherit;
}

.searchResults .inputToggle[data-js="search category radio"]:checked + .homefeatured-item {
    background: $color-lightGrey-light;
    color: $color-darkGrey-dark;
    outline: none;
    opacity: 1;
    //pointer-events: none;
    .homefeatured-icon {
        opacity: 1;
    }
    .homefeatured-text {
        font-weight: 500;
    }
}

@-moz-document url-prefix() {
    /*.searchResults-results {
        width: 72.05rem;
    }*/
}

@media only screen and (min-width: 1024px) {
    @-moz-document url-prefix() {
        .searchResults-results {
            width: 92.05rem;
        }
        .searchResults-catsContainer {
            min-width: 92.1rem;
        }
    }
}

.no-flexbox {
    .searchResults {
        display: none;
    }
}
